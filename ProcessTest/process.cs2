using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;

using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace Consoletest001.ProcessTest
{
    /// <summary>
    /// 本地文件日志记录类
    /// 创建人:李圣虎
    /// 创建时间:2009-11-11
    /// 高效率多线程写系统本地文件日志
    /// </summary>
    public class process
    {
        [DllImport("user32.dll", EntryPoint = "FindWindow", SetLastError = true)]
        private static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

        [DllImport("user32.dll", EntryPoint = "FindWindowEx", SetLastError = true)]
        private static extern IntPtr FindWindowEx(IntPtr hwndParent, uint hwndChildAfter, string lpszClass,
                                                  string lpszWindow);

        [DllImport("user32.dll", EntryPoint = "SendMessage", SetLastError = true, CharSet = CharSet.Auto)]
        private static extern int SendMessage(IntPtr hwnd, uint wMsg, int wParam, int lParam);

        [DllImport("user32.dll", EntryPoint = "SetForegroundWindow", SetLastError = true)]
        private static extern void SetForegroundWindow(IntPtr hwnd);

        public static void mainsdf()
        {
            IntPtr hwnd1 = FindWindow(null, "蜘蛛纸牌"); //查找目标程序的句柄(根据form的name 有重复怎么办?)
            Process p1 = Process.GetProcessById(2032);
            Process p =
                System.Diagnostics.Process.GetProcesses().FirstOrDefault(
                    es => es.ProcessName == "TestControlAnotherAppButtonTest"); //根据exe名称取一个
            //MessageBox.Show(hwnd + "|" + p.MainWindowHandle);
            Process[] p2 = System.Diagnostics.Process.GetProcesses();

            List<string> strs = new List<string>();
            string st2 = strs.FirstOrDefault(st1 => st1 == "1");


            if (p == null)
            {
                return;
            }
            IntPtr hwnd = p.MainWindowHandle; //注意这个
            if (hwnd != IntPtr.Zero)
            {
                IntPtr hwndThree = FindWindowEx(hwnd, 0, null, "button1"); //获取目标程序的按钮button1的句柄


                SetForegroundWindow(hwnd); //将目标程序设为当前活动窗口
                System.Threading.Thread.Sleep(500); //暂停500毫秒

                SendMessage(hwndThree, BM_CLICK, 0, 0); //模拟点击button1按钮
            }
            else
            {
                MessageBox.Show("没有启动 TestControlAnotherAppButtonTest");
            }
        }
    }
}